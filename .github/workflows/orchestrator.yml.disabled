name: orchestrator
on:
  issues:
    types: [opened, edited]
permissions:
  contents: write
  pull-requests: write

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Seed dashboard / GEN & DEL pages
        shell: bash
        env:
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_BODY: ${{ github.event.issue.body }}
          REPO: ${{ github.repository }}
        run: |
          set -euo pipefail
          echo "== orchestrator start =="

          title="$ISSUE_TITLE"
          body="${ISSUE_BODY:-}"
          cmd="$(printf '%s\n%s' "$title" "$body" | tr '[:upper:]' '[:lower:]')"
          echo "TITLE: $title"
          echo "CMD  : ${cmd:0:160}..."

          changed=0

          # pick Next base dir (prefer app router)
          if [ -d app ]; then base=app
          elif [ -d src/app ]; then base=src/app
          elif [ -d src/pages ]; then base=src/pages
          elif [ -d pages ]; then base=pages
          else base=app; fi
          mkdir -p "$base"
          echo "BASE : $base"

          # helpers
          mk_path() {
            local slug="${1#/}"
            if [[ "$base" == *pages ]]; then
              echo "$base/${slug}.tsx"
            else
              echo "$base/$slug/page.tsx"
            fi
          }
          write_page() {
            local target="$1"; local route="$2"
            mkdir -p "$(dirname "$target")"
            cat > "$target" <<EOF
          export default function Page() {
            return (
              <main style={{ padding: 24, fontFamily: "system-ui, Arial" }}>
                <h1>/$route</h1>
                <p>Auto-generated.</p>
              </main>
            );
          }
          EOF
            echo "WROTE: $target"
          }

          # SEED: dashboard
          if [[ "$cmd" =~ ^seed:\ *dashboard ]]; then
            dash_path="$(mk_path dashboard)"; dash_dir="$(dirname "$dash_path")"
            mkdir -p "$dash_dir"
            cat > "$dash_dir/page.tsx" <<EOF
          export default function Dashboard() {
            return (
              <main style={{ padding: 24, fontFamily: "system-ui, Arial" }}>
                <h1>Weave Dashboard</h1>
                <p>Tap a link to open a prefilled Issue:</p>
                <ul>
                  <li><a target="_blank" href="https://github.com/$REPO/issues/new?title=GEN:%20page%20/hello2">Create /hello2</a></li>
                  <li><a target="_blank" href="https://github.com/$REPO/issues/new?title=GEN:%20page%20/about">Create /about</a></li>
                  <li><a target="_blank" href="https://github.com/$REPO/issues/new?title=DEL:%20page%20/about">Delete /about</a></li>
                </ul>
              </main>
            );
          }
          EOF
            echo "WROTE: $dash_dir/page.tsx"
            changed=1
          fi

          # GEN: page /slug
          if [[ "$cmd" =~ ^gen:\ *page\ *(/[a-z0-9/_-]+) ]]; then
            slug="${BASH_REMATCH[1]#/}"
            target="$(mk_path "$slug")"
            if [ ! -f "$target" ]; then
              write_page "$target" "$slug"
              changed=1
            else
              echo "EXISTS: $target"
            fi
          fi

          # DEL: page /slug
          if [[ "$cmd" =~ ^del:\ *page\ *(/[a-z0-9/_-]+) ]]; then
            slug="${BASH_REMATCH[1]#/}"
            target="$(mk_path "$slug")"
            if [ -f "$target" ]; then
              git rm -f "$target"
              echo "DELETED: $target"
              changed=1
            else
              echo "NOTHING TO DELETE: $target"
            fi
          fi

          # commit only if changed
          if [ "$changed" -eq 1 ]; then
            git config user.name "orchestrator-bot"
            git config user.email "orchestrator-bot@users.noreply.github.com"
            git add -A
            if git diff --cached --quiet; then
              echo "No staged changes."
              exit 0
            fi
            git commit -m "orchestrator: apply '$title'"
            git push
          else
            echo "NO-OP (no matching command or nothing changed)"
          fi

          echo "== orchestrator done =="
