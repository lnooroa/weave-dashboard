name: agent-commit
on:
  issues:
    types: [opened, edited]

permissions:
  contents: write

jobs:
  apply:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }

      - name: Apply change from issue (seed if needed + GEN: page)
        id: apply
        env: { GITHUB_EVENT: ${{ toJson(github.event) }} }
        run: |
          python - <<'PY'
          import os, json, re, pathlib, textwrap
          ev=json.loads(os.environ['GITHUB_EVENT'])
          title=(ev.get('issue',{}).get('title') or '').strip()
          body =(ev.get('issue',{}).get('body')  or '')
          cmd=(title+'\n'+body).lower()
          print("ISSUE_TITLE:", title)
          print("CMD:", cmd)

          root=pathlib.Path('.')
          changed=False

          def w(p, txt):
              p.parent.mkdir(parents=True, exist_ok=True)
              p.write_text(textwrap.dedent(txt).lstrip('\n'), encoding='utf-8')
              print("WROTE:", p)

          # Seed minimal Next.js app if missing
          if not (root/'package.json').exists():
              w(root/'package.json', '''
              { "name":"weave-dashboard","private":true,"version":"0.1.0",
                "scripts":{"dev":"next dev","build":"next build","start":"next start","lint":"next lint"},
                "dependencies":{"next":"^14.2.33","react":"^18.3.1","react-dom":"^18.3.1"},
                "devDependencies":{"typescript":"^5.6.3","@types/node":"^20.14.10","@types/react":"^18.3.5","@types/react-dom":"^18.3.0"}
              }
              ''')
              w(root/'next.config.mjs', '/** @type {import("next").NextConfig} */\nexport default {};')
              w(root/'tsconfig.json', '''
              { "compilerOptions": { "target":"ES2020","lib":["dom","esnext"],"strict":false,"noEmit":true,
                "module":"esnext","moduleResolution":"bundler","jsx":"preserve","plugins":[{"name":"next"}]},
                "include":["next-env.d.ts","**/*.ts","**/*.tsx"],"exclude":["node_modules"] }
              ''')
              w(root/'next-env.d.ts', '/// <reference types="next" />\n/// <reference types="next/image-types/global" />\n')
              w(root/'.gitignore', 'node_modules\n.next\nout\n')
              w(root/'app'/'layout.tsx', 'export default function RootLayout({children}:{children:React.ReactNode}){return(<html lang="en"><body style={{fontFamily:"system-ui, Arial",padding:24}}>{children}</body></html>);}')
              w(root/'app'/'page.tsx', 'export default function Page(){return(<main style={{padding:24}}><h1>Dashboard</h1><p>Seeded by CI.</p></main>);}')
              changed=True

          # Handle: GEN: page /slug
          m=re.search(r'gen:\s*page\s*([/\w\-]+)', cmd)
          if m:
              slug=m.group(1).strip('/')
              # choose app dir
              for c in ['src/app','app','src/pages','pages']:
                  if (root/c).exists():
                      rootdir=c; break
              else:
                  rootdir='app'; (root/rootdir).mkdir(parents=True, exist_ok=True)
              if 'pages' in rootdir:
                  p=root/rootdir/(slug+'.tsx')
                  w(p, f'export default function Page(){{return(<main style={{padding:24}}><h1>/{slug}</h1><p>Auto-generated.</p></main>);}}')
              else:
                  p=root/rootdir/slug/'page.tsx'
                  w(p, f'export default function Page(){{return(<main style={{padding:24}}><h1>/{slug}</h1><p>Auto-generated.</p></main>);}}')
              changed=True

          # artifact to tell GitHub if we changed anything
          open('_CHANGED.flag','w').write('1' if changed else '0')
          PY

      - name: Commit to main
        if: ${{ hashFiles('_CHANGED.flag') != '' }}
        run: |
          git config user.name "agent-bot"
          git config user.email "agent-bot@users.noreply.github.com"
          git add -A
          git commit -m "agent: apply from issue #${{ github.event.issue.number }}"
          git push
